// Core

world proposer-world {
    import logger;
    import storage;
    
    export proposer;
}

world acceptor-world {
    import logger;
    import storage;

    export acceptor;
}

world learner-world {
    import logger;
    import storage;

    export learner;
}

world kv-store-world {
    import logger;
    import storage;

    export kv-store;
}

world leader-detector-world {
    import logger;
    
    export leader-detector;
}

world failure-detector-world {
    import logger;
    import leader-detector;

    export failure-detector;
}

// Agents

world proposer-agent-world {
    import proposer;
    import network-client;
    import logger;

    import failure-detector;

    export proposer-agent;
}

world acceptor-agent-world {
    import acceptor;
    import network-client;
    import logger;

    export acceptor-agent;
}

world learner-agent-world {
    import learner;
    import kv-store;
    import network-client;
    import logger;

    export learner-agent;
}

// Runners

world paxos-coordinator-world {
    import proposer-agent;
    import acceptor-agent;
    import learner-agent;

    import failure-detector;

    // import network-client;
    import logger; 

    export paxos-coordinator;
}

world paxos-runner-world {
    import client-server;
    import network-server;
    import paxos-coordinator;
    
    import logger;

    export runner;
}

// Network

world serializer-world {
    // import logger;
    
    export serializer;
}

world network-client-world {
    import serializer;
    import logger;
    export network-client;
}

world paxos-ws-world {
    import serializer;
    import proposer-agent;
    import acceptor-agent;
    import learner-agent;
    import paxos-coordinator;

    import logger;

    export ws-server;
}

world paxos-client-world {
    import serializer;
    // import logger;
    export paxos-client;
}

world network-server-world {
    import serializer;
    import logger;
    export network-server;
}

world client-server-world {
    import serializer;
    import logger;
    export client-server;
}

world storage-world {
    export storage;
}