package paxos:wrpc;

interface proposer {

    record proposer-state {
        proposal-id: u64,
        last-value: option<string>,
        num-acceptors: u64,
    }

    resource proposer-resource {
        constructor(num-acceptors: u64);
        get-state: func() -> proposer-state;
        propose: func(proposal-id: u64, value: string) -> bool;
    }
}

interface acceptor {

    record acceptor-state {
        promised-id: u64,
        accepted-id: option<u64>,
        accepted-value: option<string>,
    }

    resource acceptor-resource {
        constructor();
        get-state: func() -> acceptor-state;
        prepare: func(proposal-id: u64) -> bool;
        accept: func(proposal-id: u64, value: string) -> bool;
    }
}


world proposer-world {
    import acceptor;
    export proposer;
}
